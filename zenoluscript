--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.6) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v94=0;local v95;while true do if (v94==1) then return v95;end if (v94==0) then v95=v5(v81,v19);v19=nil;v94=1;end end else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=0 -0 ;local v83;while true do if (v82==(0 -0)) then v83=(v31/((3 -1)^(v32-1)))%(2^(((v33-(2 -1)) -(v32-(928 -((1484 -(226 + 1044)) + 713)))) + 1 + (0 -0))) ;return v83-(v83%(1 + 0)) ;end end else local v84=877 -(282 + 595) ;local v85;while true do if (v84==(619 -((672 -(32 + 85)) + 64))) then v85=(2 + 0)^(v32-((1 + 0) -0)) ;return (((v31%(v85 + v85))>=v85) and (1066 -(68 + 997))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + (4 -2) ;return (v36 * (472 -216)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (183 -(67 + (449 -336))) );v18=v18 + (7 -(955 -(802 + 150))) ;return (v40 * (41190819 -24413603)) + (v39 * (48199 + 17337)) + (v38 * ((1631 -1025) -(87 + 263))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,431 -(44 + 386) ,15 + 5 ) * ((999 -(915 + 82))^(90 -(1544 -(998 + 488))))) + v41 ;local v45=v20(v42,7 + 14 ,19 + 12 );local v46=((v20(v42,41 -9 )==(1188 -(1069 + 97 + 21))) and  -(2 -1)) or (1 -0) ;if (v45==(0 + 0)) then if (v44==(0 -0)) then return v46 * (0 + (772 -(201 + 571))) ;else v45=792 -(368 + 423) ;v43=0 -0 ;end elseif (v45==(2065 -(10 + 8))) then return ((v44==(0 -0)) and (v46 * ((443 -(416 + 26))/(0 -(1138 -(116 + 1022)))))) or (v46 * NaN) ;end return v8(v46,v45-(440 + 583) ) * (v43 + (v44/((3 -1)^(490 -((603 -458) + 293))))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(1 + 0) );v18=v18 + v47 ;local v49={};for v63=3 -2 , #v48 do v49[v63]=v2(v1(v3(v48,v63,v63)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=0 -0 ;local v51;local v52;local v53;local v54;local v55;local v56;while true do local v65=0 -0 ;while true do if ((2 -1)==v65) then if (v50==(0 -0)) then v51={};v52={};v53={};v54={v51,v52,nil,v53};v50=3 -2 ;end break;end if (v65~=(1047 -(67 + 980))) then else if (v50~=(286 -(134 + 151))) then else v55=v23();v56={};for v96=1475 -(1329 + 145) ,v55 do local v97=971 -(140 + 831) ;local v98;local v99;local v100;while true do if (v97==(1851 -(1409 + 441))) then v100=nil;while true do if (v98==1) then if (v99==1) then v100=v21()~=(718 -(15 + 703)) ;elseif (v99==(3 -1)) then v100=v24();elseif (v99==(1993 -(582 + 1408))) then v100=v25();end v56[v96]=v100;break;end if (v98~=(0 -0)) then else v99=v21();v100=nil;v98=1 + 0 ;end end break;end if (v97==0) then v98=438 -(262 + 176) ;v99=nil;v97=1;end end end v54[1724 -(345 + 1376) ]=v21();v50=690 -(198 + 490) ;end if ((8 -6)==v50) then for v101=2 -1 ,v23() do local v102=0 -0 ;local v103;while true do if (v102~=(241 -(187 + 54))) then else v103=v21();if (v20(v103,1207 -(696 + 510) ,1 -0 )~=0) then else local v106=0;local v107;local v108;local v109;while true do if (v106==(1263 -(1091 + 171))) then local v253=0;while true do if (v253==(1 + 0)) then v106=6 -4 ;break;end if ((0 -0)==v253) then v109={v22(),v22(),nil,nil};if (v107==0) then local v380=0;local v381;while true do if ((0 -0)~=v380) then else v381=0;while true do if (v381==(698 -(208 + 490))) then v109[1639 -(1373 + 263) ]=v22();v109[1 + 3 ]=v22();break;end end break;end end elseif (v107==1) then v109[1003 -(451 + 549) ]=v23();elseif (v107==(1 + 1)) then v109[839 -(660 + 176) ]=v23() -((2 -0)^(2 + 14)) ;elseif (v107==(205 -(14 + 188))) then local v388=675 -(534 + 141) ;local v389;while true do if (0~=v388) then else v389=0;while true do if (v389~=(1384 -(746 + 638))) then else v109[2 + 1 ]=v23() -(2^(23 -7)) ;v109[2 + 2 ]=v22();break;end end break;end end end v253=1;end end end if (v106==(3 + 0)) then if (v20(v108,1584 -(1535 + 46) ,3 + 0 )==1) then v109[1 + 3 ]=v56[v109[4]];end v51[v101]=v109;break;end if (v106==(562 -(306 + 254))) then if (v20(v108,1,1)==1) then v109[1 + 1 ]=v56[v109[2]];end if (v20(v108,2,3 -1 )~=(1 -0)) then else v109[4 -1 ]=v56[v109[8 -5 ]];end v106=3;end if (v106==0) then local v255=0 + 0 ;while true do if (v255~=0) then else v107=v20(v103,4 -2 ,2 + 1 );v108=v20(v103,400 -(115 + 281) ,578 -(426 + 146) );v255=2 -1 ;end if (v255==(1457 -(282 + 1174))) then v106=1;break;end end end end end break;end end end for v104=1 + 0 ,v23() do v52[v104-(812 -(569 + 242)) ]=v28();end return v54;end v65=1;end end end end local function v29(v57,v58,v59) local v60=v57[1];local v61=v57[2];local v62=v57[3];return function(...) local v66=v60;local v67=v61;local v68=v62;local v69=v27;local v70=1;local v71= -1;local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v86=0,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1];if (v79<=16) then if (v79<=7) then if (v79<=3) then if (v79<=1) then if (v79>0) then local v110=0;local v111;while true do if (v110==0) then v111=v78[2];v76[v111]=v76[v111]();break;end end else v76[v78[2]]=v29(v67[v78[3]],nil,v59);end elseif (v79>2) then local v113=v78[2];v76[v113](v76[v113 + 1 ]);else local v114=0;local v115;while true do if (v114==0) then v115=v78[2];v76[v115]=v76[v115](v13(v76,v115 + 1 ,v71));break;end end end elseif (v79<=5) then if (v79>4) then local v116;local v117,v118;local v119;local v120;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v120=v78[2];v119=v76[v78[3]];v76[v120 + 1 ]=v119;v76[v120]=v119[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v120=v78[2];v117,v118=v69(v76[v120](v13(v76,v120 + 1 ,v78[3])));v71=(v118 + v120) -1 ;v116=0;for v224=v120,v71 do local v225=0;while true do if (v225==0) then v116=v116 + 1 ;v76[v224]=v117[v116];break;end end end v70=v70 + 1 ;v78=v66[v70];v120=v78[2];v76[v120]=v76[v120](v13(v76,v120 + 1 ,v71));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]();v70=v70 + 1 ;v78=v66[v70];do return;end elseif (v78[2]==v76[v78[4]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79==6) then local v130=0;local v131;while true do if (v130==1) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v131=v78[2];v130=2;end if (3==v130) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];break;end if (v130==0) then v131=nil;v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v130=1;end if (v130==2) then v76[v131]=v76[v131](v13(v76,v131 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v130=3;end end else local v132=0;local v133;local v134;local v135;local v136;local v137;while true do if (1==v132) then v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v137=v78[2];v136=v76[v78[3]];v132=2;end if (v132==0) then v133=nil;v134,v135=nil;v136=nil;v137=nil;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v132=1;end if (v132==2) then v76[v137 + 1 ]=v136;v76[v137]=v136[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v132=3;end if (v132==4) then v70=v70 + 1 ;v78=v66[v70];v137=v78[2];v76[v137]=v76[v137](v13(v76,v137 + 1 ,v71));v70=v70 + 1 ;v78=v66[v70];v132=5;end if (3==v132) then v78=v66[v70];v137=v78[2];v134,v135=v69(v76[v137](v13(v76,v137 + 1 ,v78[3])));v71=(v135 + v137) -1 ;v133=0;for v341=v137,v71 do local v342=0;while true do if (v342==0) then v133=v133 + 1 ;v76[v341]=v134[v133];break;end end end v132=4;end if (v132==5) then v76[v78[2]]();v70=v70 + 1 ;v78=v66[v70];do return;end break;end end end elseif (v79<=11) then if (v79<=9) then if (v79==8) then if (v76[v78[2]]==v78[4]) then v70=v70 + 1 ;else v70=v78[3];end else v76[v78[2]]={};end elseif (v79==10) then v76[v78[2]][v78[3]]=v78[4];else local v141;local v142,v143;local v144;local v145;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v145=v78[2];v144=v76[v78[3]];v76[v145 + 1 ]=v144;v76[v145]=v144[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v145=v78[2];v142,v143=v69(v76[v145](v13(v76,v145 + 1 ,v78[3])));v71=(v143 + v145) -1 ;v141=0;for v226=v145,v71 do v141=v141 + 1 ;v76[v226]=v142[v141];end v70=v70 + 1 ;v78=v66[v70];v145=v78[2];v76[v145]=v76[v145](v13(v76,v145 + 1 ,v71));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]();v70=v70 + 1 ;v78=v66[v70];do return;end end elseif (v79<=13) then if (v79>12) then local v155;local v156,v157;local v158;local v159;v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v159=v78[2];v158=v76[v78[3]];v76[v159 + 1 ]=v158;v76[v159]=v158[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v159=v78[2];v156,v157=v69(v76[v159](v13(v76,v159 + 1 ,v78[3])));v71=(v157 + v159) -1 ;v155=0;for v229=v159,v71 do v155=v155 + 1 ;v76[v229]=v156[v155];end v70=v70 + 1 ;v78=v66[v70];v159=v78[2];v76[v159]=v76[v159](v13(v76,v159 + 1 ,v71));v70=v70 + 1 ;v78=v66[v70];v159=v78[2];v76[v159]=v76[v159]();v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v159=v78[2];v158=v76[v78[3]];v76[v159 + 1 ]=v158;v76[v159]=v158[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];else v76[v78[2]]();end elseif (v79<=14) then local v171=0;local v172;local v173;while true do if (v171==5) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v171=6;end if (v171==0) then v172=nil;v173=nil;v76[v78[2]][v78[3]]=v76[v78[4]];v171=1;end if (v171==2) then v76[v173](v13(v76,v173 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v171=3;end if (v171==3) then v173=v78[2];v172=v76[v78[3]];v76[v173 + 1 ]=v172;v171=4;end if (v171==6) then v76[v78[2]][v78[3]]=v78[4];break;end if (v171==4) then v76[v173]=v172[v78[4]];v70=v70 + 1 ;v78=v66[v70];v171=5;end if (v171==1) then v70=v70 + 1 ;v78=v66[v70];v173=v78[2];v171=2;end end elseif (v79>15) then local v240=0;local v241;local v242;local v243;local v244;local v245;while true do if (v240==3) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v70=v70 + 1 ;v78=v66[v70];v245=v78[2];v240=4;end if (v240==0) then v241=nil;v242,v243=nil;v244=nil;v245=nil;v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v240=1;end if (v240==4) then v244=v76[v78[3]];v76[v245 + 1 ]=v244;v76[v245]=v244[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];v240=5;end if (6==v240) then for v376=v245,v71 do local v377=0;while true do if (v377==0) then v241=v241 + 1 ;v76[v376]=v242[v241];break;end end end v70=v70 + 1 ;v78=v66[v70];v245=v78[2];v76[v245]=v76[v245](v13(v76,v245 + 1 ,v71));break;end if (v240==2) then v78=v66[v70];v245=v78[2];v76[v245](v13(v76,v245 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v59[v78[3]];v240=3;end if (v240==5) then v70=v70 + 1 ;v78=v66[v70];v245=v78[2];v242,v243=v69(v76[v245](v13(v76,v245 + 1 ,v78[3])));v71=(v243 + v245) -1 ;v241=0;v240=6;end if (v240==1) then v78=v66[v70];v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v76[v78[4]];v70=v70 + 1 ;v240=2;end end else v76[v78[2]]=v59[v78[3]];end elseif (v79<=24) then if (v79<=20) then if (v79<=18) then if (v79==17) then local v174;local v175;v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v175=v78[2];v76[v175]=v76[v175](v13(v76,v175 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v175=v78[2];v174=v76[v78[3]];v76[v175 + 1 ]=v174;v76[v175]=v174[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];else local v185=v78[2];v76[v185](v13(v76,v185 + 1 ,v78[3]));end elseif (v79>19) then v76[v78[2]][v78[3]]=v76[v78[4]];else do return;end end elseif (v79<=22) then if (v79>21) then local v188=v78[2];local v189=v76[v188];local v190=v78[3];for v232=1,v190 do v189[v232]=v76[v188 + v232 ];end else local v191=0;while true do if (v191==4) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v191=5;end if (v191==0) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v191=1;end if (6==v191) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];break;end if (v191==3) then v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v76[v78[4]];v191=4;end if (v191==5) then v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v191=6;end if (v191==2) then v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v191=3;end if (v191==1) then v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v191=2;end end end elseif (v79>23) then local v192=0;local v193;while true do if (v192==0) then v193=v78[2];v76[v193]=v76[v193](v13(v76,v193 + 1 ,v78[3]));break;end end else local v194=v78[2];local v195,v196=v69(v76[v194](v13(v76,v194 + 1 ,v78[3])));v71=(v196 + v194) -1 ;local v197=0;for v235=v194,v71 do local v236=0;while true do if (v236==0) then v197=v197 + 1 ;v76[v235]=v195[v197];break;end end end end elseif (v79<=28) then if (v79<=26) then if (v79>25) then local v198;local v199;v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v199=v78[2];v76[v199]=v76[v199](v13(v76,v199 + 1 ,v78[3]));v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v76[v78[3]];v70=v70 + 1 ;v78=v66[v70];v199=v78[2];v198=v76[v78[3]];v76[v199 + 1 ]=v198;v76[v199]=v198[v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};else v76[v78[2]]=v76[v78[3]];end elseif (v79>27) then v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];else local v215=0;local v216;local v217;while true do if (0==v215) then v216=v78[2];v217=v76[v78[3]];v215=1;end if (v215==1) then v76[v216 + 1 ]=v217;v76[v216]=v217[v78[4]];break;end end end elseif (v79<=30) then if (v79==29) then v70=v78[3];else v76[v78[2]]=v78[3];end elseif (v79<=31) then local v221=v78[2];local v222=v76[v221];for v237=v221 + 1 ,v78[3] do v7(v222,v76[v237]);end elseif (v79==32) then for v337=v78[2],v78[3] do v76[v337]=nil;end else v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]={};v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[3];end v70=v70 + 1 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
